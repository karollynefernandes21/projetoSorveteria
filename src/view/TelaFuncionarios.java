package view;

import beans.Funcionarios;
import dao.FuncionariosDao;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TelaFuncionarios extends javax.swing.JFrame {

    /**
     * Creates new form TelaFuncionarios
     */
    public TelaFuncionarios() {
        initComponents();
        listarTodosFuncionarios();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlGeral = new javax.swing.JPanel();
        pnlTitle = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        tabbedPaneFuncionarios = new javax.swing.JTabbedPane();
        pnlDadosPessoaisFuncionarios = new javax.swing.JPanel();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnPesquisarNome = new javax.swing.JButton();
        lblCep = new javax.swing.JLabel();
        txtCep = new javax.swing.JTextField();
        lblCelular = new javax.swing.JLabel();
        txtCelular = new javax.swing.JTextField();
        lblUf = new javax.swing.JLabel();
        cmbxUf = new javax.swing.JComboBox<>();
        lblEndereco = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        lblBairro = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        lblNumero = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        lblCidade = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        lblComplemento = new javax.swing.JLabel();
        txtComplemento = new javax.swing.JTextField();
        lblCpf = new javax.swing.JLabel();
        txtCpf = new javax.swing.JTextField();
        lblCargo = new javax.swing.JLabel();
        txtCargo = new javax.swing.JTextField();
        lblTipo = new javax.swing.JLabel();
        cmbxTipo = new javax.swing.JComboBox<>();
        pnlConsultaFuncionarios = new javax.swing.JPanel();
        lblNomeFuncionario = new javax.swing.JLabel();
        txtNomeFuncionario = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        scrollPaneDadosFuncionarios = new javax.swing.JScrollPane();
        tblDadosFuncionarios = new javax.swing.JTable();
        btnCadastrar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlGeral.setBackground(new java.awt.Color(248, 248, 255));
        pnlGeral.setLayout(new java.awt.GridBagLayout());

        pnlTitle.setBackground(new java.awt.Color(215, 189, 226));
        pnlTitle.setPreferredSize(new java.awt.Dimension(698, 54));

        lblTitle.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Área de Funcionários");

        javax.swing.GroupLayout pnlTitleLayout = new javax.swing.GroupLayout(pnlTitle);
        pnlTitle.setLayout(pnlTitleLayout);
        pnlTitleLayout.setHorizontalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleLayout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 700, Short.MAX_VALUE)
                .addContainerGap())
        );
        pnlTitleLayout.setVerticalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblTitle)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 482;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pnlGeral.add(pnlTitle, gridBagConstraints);

        tabbedPaneFuncionarios.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        tabbedPaneFuncionarios.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tabbedPaneFuncionarios.setPreferredSize(new java.awt.Dimension(680, 335));

        pnlDadosPessoaisFuncionarios.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblId.setText("ID:");
        pnlDadosPessoaisFuncionarios.add(lblId, new org.netbeans.lib.awtextra.AbsoluteConstraints(67, 20, -1, -1));

        txtId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtId.setEnabled(false);
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdActionPerformed(evt);
            }
        });
        pnlDadosPessoaisFuncionarios.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 20, 48, -1));

        lblNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNome.setText("Nome:");
        pnlDadosPessoaisFuncionarios.add(lblNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(44, 60, -1, -1));

        txtNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisFuncionarios.add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 60, 307, -1));

        lblEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEmail.setText("Email:");
        pnlDadosPessoaisFuncionarios.add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(48, 100, -1, -1));

        txtEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisFuncionarios.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 100, 307, -1));

        btnPesquisarNome.setBackground(new java.awt.Color(255, 218, 185));
        btnPesquisarNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPesquisarNome.setText("Pesquisar");
        btnPesquisarNome.setToolTipText("Clique neste botão para pesquisar um funcionário pelo nome");
        btnPesquisarNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarNomeActionPerformed(evt);
            }
        });
        pnlDadosPessoaisFuncionarios.add(btnPesquisarNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(420, 60, 104, -1));

        lblCep.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCep.setText("Cep:");
        pnlDadosPessoaisFuncionarios.add(lblCep, new org.netbeans.lib.awtextra.AbsoluteConstraints(56, 140, -1, -1));

        txtCep.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisFuncionarios.add(txtCep, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 140, 101, -1));

        lblCelular.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCelular.setText("Celular:");
        pnlDadosPessoaisFuncionarios.add(lblCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(224, 140, -1, -1));

        txtCelular.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisFuncionarios.add(txtCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(277, 140, 120, -1));

        lblUf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblUf.setText("UF:");
        lblUf.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        pnlDadosPessoaisFuncionarios.add(lblUf, new org.netbeans.lib.awtextra.AbsoluteConstraints(498, 260, -1, -1));

        cmbxUf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Selecione-", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        cmbxUf.setToolTipText("Selecione uma unidade federal");
        pnlDadosPessoaisFuncionarios.add(cmbxUf, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 260, 100, -1));

        lblEndereco.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEndereco.setText("Endereço:");
        pnlDadosPessoaisFuncionarios.add(lblEndereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 180, -1, -1));

        txtEndereco.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisFuncionarios.add(txtEndereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 180, 277, -1));

        lblBairro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblBairro.setText("Bairro:");
        pnlDadosPessoaisFuncionarios.add(lblBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(487, 180, -1, -1));

        txtBairro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtBairro.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtBairroActionPerformed(evt);
            }
        });
        pnlDadosPessoaisFuncionarios.add(txtBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 180, 115, -1));

        lblNumero.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNumero.setText("N°:");
        pnlDadosPessoaisFuncionarios.add(lblNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 180, -1, -1));
        pnlDadosPessoaisFuncionarios.add(txtNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(411, 181, 55, -1));

        lblCidade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCidade.setText("Cidade:");
        pnlDadosPessoaisFuncionarios.add(lblCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(35, 220, -1, -1));

        txtCidade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisFuncionarios.add(txtCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 220, 130, -1));

        lblComplemento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblComplemento.setText("Complemento:");
        pnlDadosPessoaisFuncionarios.add(lblComplemento, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 222, -1, -1));

        txtComplemento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisFuncionarios.add(txtComplemento, new org.netbeans.lib.awtextra.AbsoluteConstraints(332, 219, 134, -1));

        lblCpf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCpf.setText("CPF:");
        pnlDadosPessoaisFuncionarios.add(lblCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(490, 220, -1, -1));

        txtCpf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisFuncionarios.add(txtCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 220, 120, -1));

        lblCargo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCargo.setText("Cargo:");
        pnlDadosPessoaisFuncionarios.add(lblCargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 260, -1, -1));

        txtCargo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisFuncionarios.add(txtCargo, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 260, 140, -1));

        lblTipo.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTipo.setText("Tipo:");
        pnlDadosPessoaisFuncionarios.add(lblTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(290, 260, -1, -1));

        cmbxTipo.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Selecione-", "Gerente", "Vendedor", "Outro" }));
        cmbxTipo.setToolTipText("Selecione o tipo de funcionário");
        pnlDadosPessoaisFuncionarios.add(cmbxTipo, new org.netbeans.lib.awtextra.AbsoluteConstraints(330, 260, 100, -1));

        tabbedPaneFuncionarios.addTab("Dados pessoais", pnlDadosPessoaisFuncionarios);

        lblNomeFuncionario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNomeFuncionario.setText("Nome do funcionário:");

        txtNomeFuncionario.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnPesquisar.setBackground(new java.awt.Color(255, 218, 185));
        btnPesquisar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setToolTipText("Clique neste botão para pesquisar os funcionários filtrando pelo nome");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        tblDadosFuncionarios.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Email", "CPF", "Cep", "Endereço", "N°", "Bairro", "Cidade", "UF", "Celular", "Cargo"
            }
        ));
        scrollPaneDadosFuncionarios.setViewportView(tblDadosFuncionarios);

        javax.swing.GroupLayout pnlConsultaFuncionariosLayout = new javax.swing.GroupLayout(pnlConsultaFuncionarios);
        pnlConsultaFuncionarios.setLayout(pnlConsultaFuncionariosLayout);
        pnlConsultaFuncionariosLayout.setHorizontalGroup(
            pnlConsultaFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConsultaFuncionariosLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pnlConsultaFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneDadosFuncionarios, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlConsultaFuncionariosLayout.createSequentialGroup()
                        .addComponent(lblNomeFuncionario)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNomeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlConsultaFuncionariosLayout.setVerticalGroup(
            pnlConsultaFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConsultaFuncionariosLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pnlConsultaFuncionariosLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeFuncionario)
                    .addComponent(txtNomeFuncionario, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollPaneDadosFuncionarios, javax.swing.GroupLayout.PREFERRED_SIZE, 217, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        tabbedPaneFuncionarios.addTab("Consulta de funcionários", pnlConsultaFuncionarios);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 9;
        gridBagConstraints.ipady = 11;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 10, 0, 0);
        pnlGeral.add(tabbedPaneFuncionarios, gridBagConstraints);

        btnCadastrar.setBackground(new java.awt.Color(179, 229, 252));
        btnCadastrar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.setToolTipText("Clique neste botão para cadastrar um funcionário");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 12, 0);
        pnlGeral.add(btnCadastrar, gridBagConstraints);

        btnAtualizar.setBackground(new java.awt.Color(179, 229, 252));
        btnAtualizar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.setToolTipText("Clique neste botão para atualizar o registro de um funcionário");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 12, 0);
        pnlGeral.add(btnAtualizar, gridBagConstraints);

        btnExcluir.setBackground(new java.awt.Color(179, 229, 252));
        btnExcluir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setToolTipText("Clique neste botão para excluir o registro de um funcionário");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 60, 12, 0);
        pnlGeral.add(btnExcluir, gridBagConstraints);

        btnLimpar.setBackground(new java.awt.Color(179, 229, 252));
        btnLimpar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.setToolTipText("Clique neste botão para limpar os campos");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 28;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(10, 50, 12, 0);
        pnlGeral.add(btnLimpar, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlGeral, javax.swing.GroupLayout.PREFERRED_SIZE, 690, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addGap(5, 5, 5)
                .addComponent(pnlGeral, javax.swing.GroupLayout.PREFERRED_SIZE, 453, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdActionPerformed

    private void txtBairroActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtBairroActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtBairroActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        try {
            if (txtNome.getText().trim().isEmpty() || txtCpf.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Nome e CPF são obrigatórios!");
                return;
            }

            Funcionarios funcionario = new Funcionarios();

            funcionario.setNome(txtNome.getText());
            funcionario.setCpf(txtCpf.getText());
            funcionario.setEmail(txtEmail.getText());
            funcionario.setCelular(txtCelular.getText());
            funcionario.setCep(txtCep.getText());
            funcionario.setEndereco(txtEndereco.getText());
            funcionario.setNumero(txtNumero.getText());
            funcionario.setBairro(txtBairro.getText());
            funcionario.setCidade(txtCidade.getText());
            funcionario.setComplemento(txtComplemento.getText());
            funcionario.setUnidade(cmbxUf.getSelectedItem().toString());
            funcionario.setTipo(cmbxTipo.getSelectedItem().toString());
            funcionario.setCargo(txtCargo.getText());

            FuncionariosDao funcionariosDao = new FuncionariosDao();
            funcionariosDao.cadastroFuncionarios(funcionario);

            listarTodosFuncionarios();

            JOptionPane.showMessageDialog(null, "Funcionário cadastrado com sucesso!");
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível cadastrar o funcionário: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        try {
            if (txtNome.getText().trim().isEmpty() || txtCpf.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Nome e CPF são obrigatórios!");
                return;
            }

            Funcionarios funcionario = new Funcionarios();

            funcionario.setId(Integer.parseInt(txtId.getText()));
            funcionario.setNome(txtNome.getText());
            funcionario.setCpf(txtCpf.getText());
            funcionario.setEmail(txtEmail.getText());
            funcionario.setCelular(txtCelular.getText());
            funcionario.setCep(txtCep.getText());
            funcionario.setEndereco(txtEndereco.getText());
            funcionario.setNumero(txtNumero.getText());
            funcionario.setBairro(txtBairro.getText());
            funcionario.setCidade(txtCidade.getText());
            funcionario.setComplemento(txtComplemento.getText());
            funcionario.setUnidade(cmbxUf.getSelectedItem().toString());
            funcionario.setTipo(cmbxTipo.getSelectedItem().toString());
            funcionario.setCargo(txtCargo.getText());

            FuncionariosDao funcionariosDao = new FuncionariosDao();
            funcionariosDao.atualizarFuncionarios(funcionario);

            listarTodosFuncionarios();

            JOptionPane.showMessageDialog(null, "Funcionário atualizado com sucesso!");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível atualizar o funcionário: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        try {
            if (txtId.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Pesquise um funcionário antes de excluir.");
                return;
            }

            int confirmacao = JOptionPane.showConfirmDialog(
                    null,
                    "Tem certeza que deseja excluir este funcionário?",
                    "Confirmação",
                    JOptionPane.YES_NO_OPTION
            );

            if (confirmacao == JOptionPane.YES_OPTION) {
                Funcionarios funcionario = new Funcionarios();
                funcionario.setId(Integer.parseInt(txtId.getText())); // este id foi preenchido na pesquisa

                FuncionariosDao dao = new FuncionariosDao();
                dao.excluirFuncionarios(funcionario);

                listarTodosFuncionarios();

                JOptionPane.showMessageDialog(null, "Funcionário excluído com sucesso!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao excluir funcionário: " + e.getMessage());
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnPesquisarNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarNomeActionPerformed
        try {
            String nome = txtNome.getText().trim();

            if (nome.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Digite o nome do funcionário para pesquisar.");
                return;
            }

            FuncionariosDao dao = new FuncionariosDao();
            Funcionarios funcionario = dao.buscarNomeFuncionario(nome);

            if (funcionario != null) {
                txtId.setText(String.valueOf(funcionario.getId()));
                txtNome.setText(funcionario.getNome());
                txtCpf.setText(funcionario.getCpf());
                txtEmail.setText(funcionario.getEmail());
                txtCelular.setText(funcionario.getCelular());
                txtCep.setText(funcionario.getCep());
                txtEndereco.setText(funcionario.getEndereco());
                txtNumero.setText(funcionario.getNumero());
                txtBairro.setText(funcionario.getBairro());
                txtCidade.setText(funcionario.getCidade());
                txtComplemento.setText(funcionario.getComplemento());
                cmbxUf.setSelectedItem(funcionario.getUnidade());
                cmbxTipo.setSelectedItem(funcionario.getTipo());
                txtCargo.setText(funcionario.getCargo());

                JOptionPane.showMessageDialog(null, "Funcionário encontrado!");
            } else {
                JOptionPane.showMessageDialog(null, "Funcionário não encontrado!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao buscar funcionário: " + e.getMessage());
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnPesquisarNomeActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // Limpar todos os campos
        txtId.setText("");
        txtNome.setText("");
        txtCpf.setText("");
        txtEmail.setText("");
        txtCelular.setText("");
        txtCep.setText("");
        txtEndereco.setText("");
        txtNumero.setText("");
        txtBairro.setText("");
        txtCidade.setText("");
        txtComplemento.setText("");
        cmbxUf.setSelectedIndex(0);
        cmbxTipo.setSelectedIndex(0);
        txtCargo.setText("");
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        try {
            // Pega o nome digitado no jTextField
            String nome = txtNomeFuncionario.getText().trim();

            // Buscando o funcionário pelo nome
            FuncionariosDao dao = new FuncionariosDao();
            ArrayList<Funcionarios> lista = dao.listarFuncionariosPorNome(nome);

            // Atualiza a tabela com os resultados encontrados
            DefaultTableModel modelo = (DefaultTableModel) tblDadosFuncionarios.getModel();
            modelo.setRowCount(0); // limpa a tabela

            for (Funcionarios f : lista) {
                modelo.addRow(new Object[]{
                    f.getId(),
                    f.getNome(),
                    f.getEmail(),
                    f.getCpf(),
                    f.getCep(),
                    f.getEndereco(),
                    f.getNumero(),
                    f.getBairro(),
                    f.getCidade(),
                    f.getUnidade(),
                    f.getCelular(),
                    f.getCargo()
                });
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao pesquisar funcionário: " + e.getMessage());
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnPesquisarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaFuncionarios.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaFuncionarios().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnPesquisarNome;
    private javax.swing.JComboBox<String> cmbxTipo;
    private javax.swing.JComboBox<String> cmbxUf;
    private javax.swing.JLabel lblBairro;
    private javax.swing.JLabel lblCargo;
    private javax.swing.JLabel lblCelular;
    private javax.swing.JLabel lblCep;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblComplemento;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNomeFuncionario;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblTipo;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUf;
    private javax.swing.JPanel pnlConsultaFuncionarios;
    private javax.swing.JPanel pnlDadosPessoaisFuncionarios;
    private javax.swing.JPanel pnlGeral;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JScrollPane scrollPaneDadosFuncionarios;
    private javax.swing.JTabbedPane tabbedPaneFuncionarios;
    private javax.swing.JTable tblDadosFuncionarios;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtCargo;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtCep;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JTextField txtCpf;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNomeFuncionario;
    private javax.swing.JTextField txtNumero;
    // End of variables declaration//GEN-END:variables

    public void listarTodosFuncionarios() {
        try {
            FuncionariosDao dao = new FuncionariosDao();
            ArrayList<Funcionarios> lista = dao.listarFuncionarios();

            DefaultTableModel modelo = (DefaultTableModel) tblDadosFuncionarios.getModel();
            modelo.setRowCount(0);

            for (Funcionarios f : lista) {
                modelo.addRow(new Object[]{
                    f.getId(),
                    f.getNome(),
                    f.getEmail(),
                    f.getCpf(),
                    f.getCep(),
                    f.getEndereco(),
                    f.getNumero(),
                    f.getBairro(),
                    f.getCidade(),
                    f.getUnidade(),
                    f.getCelular(),
                    f.getCargo()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao listar funcionários: " + e.getMessage());
        }
    }

}
