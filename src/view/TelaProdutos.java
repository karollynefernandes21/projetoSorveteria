package view;

import beans.Fornecedores;
import beans.Sorvetes;
import dao.FornecedoresDao;
import dao.SorvetesDao;
import java.time.LocalDate;
import java.util.ArrayList;
import javax.swing.DefaultComboBoxModel;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TelaProdutos extends javax.swing.JFrame {


    public TelaProdutos() {
        initComponents();
        listarTodosSorvetes();
        carregarFornecedores();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlGeral = new javax.swing.JPanel();
        pnlTitle = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        tabbedPaneProdutos = new javax.swing.JTabbedPane();
        pnlDadosProdutos = new javax.swing.JPanel();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lblSaborSorvete = new javax.swing.JLabel();
        txtSaborSorvete = new javax.swing.JTextField();
        lblDescricao = new javax.swing.JLabel();
        scrollPanetxtAreaDescricao = new javax.swing.JScrollPane();
        txtAreaDescricao = new javax.swing.JTextArea();
        btnPesquisarSaborSorvete = new javax.swing.JButton();
        lblPreco = new javax.swing.JLabel();
        txtPreco = new javax.swing.JTextField();
        lblQuantidade = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        lblUnidadeMedida = new javax.swing.JLabel();
        cmbxUnidadeMedida = new javax.swing.JComboBox<>();
        lblCategoria = new javax.swing.JLabel();
        cmbxCategoria = new javax.swing.JComboBox<>();
        lblFornecedor = new javax.swing.JLabel();
        cmbxFornecedor = new javax.swing.JComboBox<>();
        pnlConsultaProdutos = new javax.swing.JPanel();
        lblSaborSorveteConsulta = new javax.swing.JLabel();
        txtSaborSorveteConsulta = new javax.swing.JTextField();
        btnConsultarSaborSorvete = new javax.swing.JButton();
        scrollPaneDadosProdutos = new javax.swing.JScrollPane();
        tblDadosProdutos = new javax.swing.JTable();
        btnCadastrar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlGeral.setBackground(new java.awt.Color(248, 248, 255));
        pnlGeral.setPreferredSize(new java.awt.Dimension(680, 410));
        pnlGeral.setLayout(new java.awt.GridBagLayout());

        pnlTitle.setBackground(new java.awt.Color(215, 189, 226));

        lblTitle.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Área de Produtos");

        javax.swing.GroupLayout pnlTitleLayout = new javax.swing.GroupLayout(pnlTitle);
        pnlTitle.setLayout(pnlTitleLayout);
        pnlTitleLayout.setHorizontalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleLayout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 0, Short.MAX_VALUE))
        );
        pnlTitleLayout.setVerticalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblTitle)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 4;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pnlGeral.add(pnlTitle, gridBagConstraints);

        tabbedPaneProdutos.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        tabbedPaneProdutos.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tabbedPaneProdutos.setPreferredSize(new java.awt.Dimension(680, 282));

        pnlDadosProdutos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblId.setText("ID:");
        pnlDadosProdutos.add(lblId, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 20, -1, -1));

        txtId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtId.setEnabled(false);
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdtxtIdActionPerformed(evt);
            }
        });
        pnlDadosProdutos.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(53, 20, 48, -1));

        lblSaborSorvete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblSaborSorvete.setText("Sabor do sorvete:");
        pnlDadosProdutos.add(lblSaborSorvete, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 61, -1, -1));

        txtSaborSorvete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosProdutos.add(txtSaborSorvete, new org.netbeans.lib.awtextra.AbsoluteConstraints(147, 60, 240, -1));

        lblDescricao.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblDescricao.setText("Descrição:");
        pnlDadosProdutos.add(lblDescricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 110, -1, -1));

        txtAreaDescricao.setColumns(20);
        txtAreaDescricao.setRows(5);
        scrollPanetxtAreaDescricao.setViewportView(txtAreaDescricao);

        pnlDadosProdutos.add(scrollPanetxtAreaDescricao, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 100, 290, 40));

        btnPesquisarSaborSorvete.setBackground(new java.awt.Color(255, 218, 185));
        btnPesquisarSaborSorvete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPesquisarSaborSorvete.setText("Pesquisar");
        btnPesquisarSaborSorvete.setToolTipText("Clique neste botão para pesquisar um sabor de sorvete");
        btnPesquisarSaborSorvete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarSaborSorveteActionPerformed(evt);
            }
        });
        pnlDadosProdutos.add(btnPesquisarSaborSorvete, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, 104, -1));

        lblPreco.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPreco.setText("Preço:");
        pnlDadosProdutos.add(lblPreco, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 162, -1, -1));

        txtPreco.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosProdutos.add(txtPreco, new org.netbeans.lib.awtextra.AbsoluteConstraints(74, 160, 70, -1));

        lblQuantidade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblQuantidade.setText("Quantidade:");
        pnlDadosProdutos.add(lblQuantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 162, -1, -1));

        txtQuantidade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosProdutos.add(txtQuantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(315, 160, 77, -1));

        lblUnidadeMedida.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblUnidadeMedida.setText("Unidade:");
        pnlDadosProdutos.add(lblUnidadeMedida, new org.netbeans.lib.awtextra.AbsoluteConstraints(450, 162, -1, -1));

        cmbxUnidadeMedida.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbxUnidadeMedida.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Selecione-", "gramas", "kilogramas", "mililitros", "litros" }));
        cmbxUnidadeMedida.setToolTipText("Selecione uma unidade de medida para o sorvete");
        cmbxUnidadeMedida.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                cmbxUnidadeMedidaActionPerformed(evt);
            }
        });
        pnlDadosProdutos.add(cmbxUnidadeMedida, new org.netbeans.lib.awtextra.AbsoluteConstraints(512, 160, 110, -1));

        lblCategoria.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCategoria.setText("Categoria:");
        pnlDadosProdutos.add(lblCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 212, -1, -1));

        cmbxCategoria.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbxCategoria.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Selecione-", "Clássicos", "Premium", "Diet" }));
        cmbxCategoria.setToolTipText("Selecione a categoria do sorvete");
        pnlDadosProdutos.add(cmbxCategoria, new org.netbeans.lib.awtextra.AbsoluteConstraints(100, 210, -1, -1));

        lblFornecedor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblFornecedor.setText("Fornecedor:");
        pnlDadosProdutos.add(lblFornecedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(230, 212, -1, -1));

        cmbxFornecedor.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        cmbxFornecedor.setModel(new DefaultComboBoxModel<Fornecedores>());
        cmbxFornecedor.setToolTipText("Selecione qual o fornecedor do sorvete");
        pnlDadosProdutos.add(cmbxFornecedor, new org.netbeans.lib.awtextra.AbsoluteConstraints(310, 210, 140, -1));

        tabbedPaneProdutos.addTab("Dados do produto", pnlDadosProdutos);

        pnlConsultaProdutos.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblSaborSorveteConsulta.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblSaborSorveteConsulta.setText("Sabor do sorvete:");
        pnlConsultaProdutos.add(lblSaborSorveteConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(22, 31, -1, -1));

        txtSaborSorveteConsulta.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlConsultaProdutos.add(txtSaborSorveteConsulta, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 28, 295, -1));

        btnConsultarSaborSorvete.setBackground(new java.awt.Color(255, 218, 185));
        btnConsultarSaborSorvete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnConsultarSaborSorvete.setText("Pesquisar");
        btnConsultarSaborSorvete.setToolTipText("Clique neste botão para pesquisar os sorvetes");
        btnConsultarSaborSorvete.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnConsultarSaborSorveteActionPerformed(evt);
            }
        });
        pnlConsultaProdutos.add(btnConsultarSaborSorvete, new org.netbeans.lib.awtextra.AbsoluteConstraints(448, 28, 104, -1));

        tblDadosProdutos.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Sabor sorvete", "Categoria", "Preço", "Unidade"
            }
        ));
        scrollPaneDadosProdutos.setViewportView(tblDadosProdutos);

        pnlConsultaProdutos.add(scrollPaneDadosProdutos, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 70, 639, 176));

        tabbedPaneProdutos.addTab("Consulta de produtos", pnlConsultaProdutos);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipadx = 7;
        gridBagConstraints.ipady = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(0, 8, 0, 0);
        pnlGeral.add(tabbedPaneProdutos, gridBagConstraints);

        btnCadastrar.setBackground(new java.awt.Color(179, 229, 252));
        btnCadastrar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.setToolTipText("Clique aqui para cadastrar o sorvete");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 48, 36, 0);
        pnlGeral.add(btnCadastrar, gridBagConstraints);

        btnAtualizar.setBackground(new java.awt.Color(179, 229, 252));
        btnAtualizar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.setToolTipText("Clique aqui para atualizar o registro do sorvete");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 50, 36, 0);
        pnlGeral.add(btnAtualizar, gridBagConstraints);

        btnExcluir.setBackground(new java.awt.Color(179, 229, 252));
        btnExcluir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setToolTipText("Clique aqui para excluir o registro do sorvete");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 60, 36, 0);
        pnlGeral.add(btnExcluir, gridBagConstraints);

        btnLimpar.setBackground(new java.awt.Color(179, 229, 252));
        btnLimpar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.setToolTipText("Clique neste botão para limpar os campos");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 28;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(16, 50, 36, 0);
        pnlGeral.add(btnLimpar, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlGeral, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlGeral, javax.swing.GroupLayout.DEFAULT_SIZE, 436, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdtxtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdtxtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdtxtIdActionPerformed

    private void cmbxUnidadeMedidaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_cmbxUnidadeMedidaActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_cmbxUnidadeMedidaActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        try {
            // Verificação de campos obrigatórios
            if (txtSaborSorvete.getText().trim().isEmpty() || txtPreco.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Sabor e preço do sorvete são obrigatórios!");
                return;
            }

            Sorvetes sorvete = new Sorvetes();

            sorvete.setSaborSorvete(txtSaborSorvete.getText());
            sorvete.setDescricao(txtAreaDescricao.getText());
            sorvete.setCategoria(cmbxCategoria.getSelectedItem().toString());
            sorvete.setUnidade(cmbxUnidadeMedida.getSelectedItem().toString());
            sorvete.setQuantidade(Integer.parseInt(txtQuantidade.getText()));
            sorvete.setPreco(Double.parseDouble(txtPreco.getText()));

            // Pegando o fornecedor selecionado no comboBox
            Fornecedores fornecedor = (Fornecedores) cmbxFornecedor.getSelectedItem();
            sorvete.setFornecedor(fornecedor);

            // Setando datas automaticamente
            LocalDate dataEntrada = LocalDate.now();
            LocalDate dataValidade = dataEntrada.plusYears(2);
            sorvete.setDataEntrada(dataEntrada);
            sorvete.setDataValidade(dataValidade);

            // Salvando no banco de dados
            SorvetesDao dao = new SorvetesDao();
            dao.cadastroSorvete(sorvete);

            listarTodosSorvetes();

            JOptionPane.showMessageDialog(null, "Sorvete cadastrado com sucesso!");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível cadastrar o sorvete: " + e.getMessage());
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        try {
            if (txtSaborSorvete.getText().trim().isEmpty() || txtPreco.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Sabor do sorvete e preço são obrigatórios!");
                return;
            }

            Sorvetes sorvete = new Sorvetes();

            sorvete.setId(Integer.parseInt(txtId.getText()));
            sorvete.setSaborSorvete(txtSaborSorvete.getText());
            sorvete.setDescricao(txtAreaDescricao.getText());
            sorvete.setCategoria(cmbxCategoria.getSelectedItem().toString());
            sorvete.setUnidade(cmbxUnidadeMedida.getSelectedItem().toString());
            sorvete.setQuantidade(Integer.parseInt(txtQuantidade.getText()));
            sorvete.setPreco(Double.parseDouble(txtPreco.getText()));

            Fornecedores fornecedorSelecionado = (Fornecedores) cmbxFornecedor.getSelectedItem();
            sorvete.setFornecedor(fornecedorSelecionado);

            SorvetesDao dao = new SorvetesDao();
            dao.atualizarSorvete(sorvete);

            listarTodosSorvetes(); // Atualiza a tabela com os sorvetes atualizados

            JOptionPane.showMessageDialog(null, "Sorvete atualizado com sucesso!");

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível atualizar o sorvete: " + e.getMessage());
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnPesquisarSaborSorveteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarSaborSorveteActionPerformed
        try {
            String sabor = txtSaborSorvete.getText().trim();

            if (sabor.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Digite o sabor do sorvete para pesquisar.");
                return;
            }

            SorvetesDao dao = new SorvetesDao();
            Sorvetes sorvete = dao.buscarSaborSorvete(sabor);

            if (sorvete != null) {
                txtId.setText(String.valueOf(sorvete.getId()));
                txtSaborSorvete.setText(sorvete.getSaborSorvete());
                txtAreaDescricao.setText(sorvete.getDescricao());
                cmbxCategoria.setSelectedItem(sorvete.getCategoria());
                cmbxUnidadeMedida.setSelectedItem(sorvete.getUnidade());
                txtQuantidade.setText(String.valueOf(sorvete.getQuantidade()));
                txtPreco.setText(String.valueOf(sorvete.getPreco()));
                cmbxFornecedor.setSelectedItem(sorvete.getFornecedor());

                JOptionPane.showMessageDialog(null, "Sorvete encontrado!");
            } else {
                JOptionPane.showMessageDialog(null, "Sorvete não encontrado!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao buscar sorvete: " + e.getMessage());
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnPesquisarSaborSorveteActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        try {
            if (txtId.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Pesquise um sorvete antes de excluir.");
                return;
            }

            int confirmacao = JOptionPane.showConfirmDialog(
                    null,
                    "Tem certeza que deseja excluir este sorvete?",
                    "Confirmação",
                    JOptionPane.YES_NO_OPTION
            );

            if (confirmacao == JOptionPane.YES_OPTION) {
                Sorvetes sorvete = new Sorvetes();
                sorvete.setId(Integer.parseInt(txtId.getText())); // ID preenchido após a pesquisa

                SorvetesDao dao = new SorvetesDao();
                dao.excluirSorvete(sorvete);

                listarTodosSorvetes();

                JOptionPane.showMessageDialog(null, "Sorvete excluído com sucesso!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao excluir sorvete: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // Limpar todos os campos do formulário de sorvete
        txtId.setText("");
        txtSaborSorvete.setText("");
        txtAreaDescricao.setText("");
        cmbxCategoria.setSelectedIndex(0);
        cmbxUnidadeMedida.setSelectedIndex(0);
        txtQuantidade.setText("");
        txtPreco.setText("");
        cmbxFornecedor.setSelectedIndex(0);
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnConsultarSaborSorveteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnConsultarSaborSorveteActionPerformed
        try {
            // Pega o sabor digitado no jTextField
            String sabor = txtSaborSorvete.getText().trim();

            // Buscando os sorvetes pelo sabor
            SorvetesDao dao = new SorvetesDao();
            ArrayList<Sorvetes> lista = dao.listarSorvetesPorSabor(sabor);
            
             System.out.println("Total de sorvetes encontrados: " + lista.size());


            // Atualiza a tabela com os resultados encontrados
            DefaultTableModel modelo = (DefaultTableModel) tblDadosProdutos.getModel();
            modelo.setRowCount(0);

            for (Sorvetes s : lista) {
                modelo.addRow(new Object[]{
                    s.getId(),
                    s.getSaborSorvete(),
                    s.getCategoria(),
                    s.getPreco(),
                    s.getUnidade()
                });
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao pesquisar sorvete: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnConsultarSaborSorveteActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaProdutos.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaProdutos().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnConsultarSaborSorvete;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnPesquisarSaborSorvete;
    private javax.swing.JComboBox<String> cmbxCategoria;
    private javax.swing.JComboBox<Fornecedores> cmbxFornecedor;
    private javax.swing.JComboBox<String> cmbxUnidadeMedida;
    private javax.swing.JLabel lblCategoria;
    private javax.swing.JLabel lblDescricao;
    private javax.swing.JLabel lblFornecedor;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblPreco;
    private javax.swing.JLabel lblQuantidade;
    private javax.swing.JLabel lblSaborSorvete;
    private javax.swing.JLabel lblSaborSorveteConsulta;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUnidadeMedida;
    private javax.swing.JPanel pnlConsultaProdutos;
    private javax.swing.JPanel pnlDadosProdutos;
    private javax.swing.JPanel pnlGeral;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JScrollPane scrollPaneDadosProdutos;
    private javax.swing.JScrollPane scrollPanetxtAreaDescricao;
    private javax.swing.JTabbedPane tabbedPaneProdutos;
    private javax.swing.JTable tblDadosProdutos;
    private javax.swing.JTextArea txtAreaDescricao;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtPreco;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtSaborSorvete;
    private javax.swing.JTextField txtSaborSorveteConsulta;
    // End of variables declaration//GEN-END:variables

    public void listarTodosSorvetes() {
        try {
            SorvetesDao dao = new SorvetesDao();
            ArrayList<Sorvetes> lista = dao.listarSorvetes();

            DefaultTableModel modelo = (DefaultTableModel) tblDadosProdutos.getModel();
            modelo.setRowCount(0);

            for (Sorvetes s : lista) {
                modelo.addRow(new Object[]{
                    s.getId(),
                    s.getSaborSorvete(),
                    s.getCategoria(),
                    s.getPreco(),
                    s.getUnidade()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao listar sorvetes: " + e.getMessage());
        }
    }

    // Método para carregar os nomes dos fornecedores na comboBox
    public void carregarFornecedores() {

        try {
            FornecedoresDao dao = new FornecedoresDao();
            ArrayList<Fornecedores> lista = dao.listarFornecedores();

            cmbxFornecedor.removeAllItems();
            for (Fornecedores f : lista) {
                cmbxFornecedor.addItem(f);
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao carregar fornecedores: " + e.getMessage());
        }
    }

}
