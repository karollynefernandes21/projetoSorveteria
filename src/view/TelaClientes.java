package view;

import beans.Clientes;
import dao.ClientesDao;
import java.util.ArrayList;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TelaClientes extends javax.swing.JFrame {
    
    public TelaClientes() {
        initComponents();
        listarTodosClientes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {
        java.awt.GridBagConstraints gridBagConstraints;

        pnlGeral = new javax.swing.JPanel();
        pnlTitle = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        tabbedPaneClientes = new javax.swing.JTabbedPane();
        pnlDadosPessoaisClientes = new javax.swing.JPanel();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lblNome = new javax.swing.JLabel();
        txtNome = new javax.swing.JTextField();
        lblEmail = new javax.swing.JLabel();
        txtEmail = new javax.swing.JTextField();
        btnPesquisarNome = new javax.swing.JButton();
        lblCep = new javax.swing.JLabel();
        txtCep = new javax.swing.JTextField();
        lblCelular = new javax.swing.JLabel();
        txtCelular = new javax.swing.JTextField();
        lblUf = new javax.swing.JLabel();
        cmbxUf = new javax.swing.JComboBox<>();
        lblEndereco = new javax.swing.JLabel();
        txtEndereco = new javax.swing.JTextField();
        lblBairro = new javax.swing.JLabel();
        txtBairro = new javax.swing.JTextField();
        lblNumero = new javax.swing.JLabel();
        txtNumero = new javax.swing.JTextField();
        lblCidade = new javax.swing.JLabel();
        txtCidade = new javax.swing.JTextField();
        lblComplemento = new javax.swing.JLabel();
        txtComplemento = new javax.swing.JTextField();
        lblCpf = new javax.swing.JLabel();
        txtCpf = new javax.swing.JTextField();
        pnlConsultaClientes = new javax.swing.JPanel();
        lblNomeCliente = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        btnPesquisar = new javax.swing.JButton();
        scrollPaneDadosClientes = new javax.swing.JScrollPane();
        tblDadosClientes = new javax.swing.JTable();
        btnCadastrar = new javax.swing.JButton();
        btnAtualizar = new javax.swing.JButton();
        btnExcluir = new javax.swing.JButton();
        btnLimpar = new javax.swing.JButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlGeral.setBackground(new java.awt.Color(248, 248, 255));
        pnlGeral.setLayout(new java.awt.GridBagLayout());

        pnlTitle.setBackground(new java.awt.Color(215, 189, 226));

        lblTitle.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Área de Clientes");

        javax.swing.GroupLayout pnlTitleLayout = new javax.swing.GroupLayout(pnlTitle);
        pnlTitle.setLayout(pnlTitleLayout);
        pnlTitleLayout.setHorizontalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleLayout.createSequentialGroup()
                .addComponent(lblTitle, javax.swing.GroupLayout.PREFERRED_SIZE, 678, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(0, 1, Short.MAX_VALUE))
        );
        pnlTitleLayout.setVerticalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblTitle)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 0;
        gridBagConstraints.gridwidth = 6;
        gridBagConstraints.ipadx = 1;
        gridBagConstraints.ipady = 7;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        pnlGeral.add(pnlTitle, gridBagConstraints);

        tabbedPaneClientes.setBorder(javax.swing.BorderFactory.createEtchedBorder(javax.swing.border.EtchedBorder.RAISED));
        tabbedPaneClientes.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        pnlDadosPessoaisClientes.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblId.setText("ID:");
        pnlDadosPessoaisClientes.add(lblId, new org.netbeans.lib.awtextra.AbsoluteConstraints(54, 20, -1, -1));

        txtId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtId.setEnabled(false);
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdtxtIdActionPerformed(evt);
            }
        });
        pnlDadosPessoaisClientes.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 20, 48, -1));

        lblNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNome.setText("Nome:");
        pnlDadosPessoaisClientes.add(lblNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(30, 60, -1, -1));

        txtNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisClientes.add(txtNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 60, 307, -1));

        lblEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEmail.setText("Email:");
        pnlDadosPessoaisClientes.add(lblEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(34, 100, -1, -1));

        txtEmail.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisClientes.add(txtEmail, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 100, 307, -1));

        btnPesquisarNome.setBackground(new java.awt.Color(255, 218, 185));
        btnPesquisarNome.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPesquisarNome.setText("Pesquisar");
        btnPesquisarNome.setToolTipText("Clique neste botão para pesquisar um cliente");
        btnPesquisarNome.setBorder(javax.swing.BorderFactory.createEtchedBorder());
        btnPesquisarNome.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarNomeActionPerformed(evt);
            }
        });
        pnlDadosPessoaisClientes.add(btnPesquisarNome, new org.netbeans.lib.awtextra.AbsoluteConstraints(410, 60, 104, -1));

        lblCep.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCep.setText("Cep:");
        pnlDadosPessoaisClientes.add(lblCep, new org.netbeans.lib.awtextra.AbsoluteConstraints(42, 140, -1, -1));

        txtCep.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisClientes.add(txtCep, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 101, -1));

        lblCelular.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCelular.setText("Celular:");
        pnlDadosPessoaisClientes.add(lblCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(225, 140, -1, -1));

        txtCelular.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisClientes.add(txtCelular, new org.netbeans.lib.awtextra.AbsoluteConstraints(280, 140, 102, -1));

        lblUf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblUf.setText("UF:");
        pnlDadosPessoaisClientes.add(lblUf, new org.netbeans.lib.awtextra.AbsoluteConstraints(524, 140, -1, -1));

        cmbxUf.setModel(new javax.swing.DefaultComboBoxModel<>(new String[] { "-Selecione-", "AC", "AL", "AP", "AM", "BA", "CE", "DF", "ES", "GO", "MA", "MT", "MS", "MG", "PA", "PB", "PR", "PE", "PI", "RJ", "RN", "RS", "RO", "RR", "SC", "SP", "SE", "TO" }));
        cmbxUf.setToolTipText("Selecione uma unidade federal");
        pnlDadosPessoaisClientes.add(cmbxUf, new org.netbeans.lib.awtextra.AbsoluteConstraints(550, 140, 100, -1));

        lblEndereco.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEndereco.setText("Endereço:");
        pnlDadosPessoaisClientes.add(lblEndereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(10, 180, -1, -1));

        txtEndereco.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisClientes.add(txtEndereco, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 181, 277, -1));

        lblBairro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblBairro.setText("Bairro:");
        pnlDadosPessoaisClientes.add(lblBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(487, 180, -1, -1));

        txtBairro.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisClientes.add(txtBairro, new org.netbeans.lib.awtextra.AbsoluteConstraints(532, 180, 115, -1));

        lblNumero.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNumero.setText("N°:");
        pnlDadosPessoaisClientes.add(lblNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(386, 180, -1, -1));
        pnlDadosPessoaisClientes.add(txtNumero, new org.netbeans.lib.awtextra.AbsoluteConstraints(411, 181, 55, -1));

        lblCidade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCidade.setText("Cidade:");
        pnlDadosPessoaisClientes.add(lblCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(23, 222, -1, -1));

        txtCidade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisClientes.add(txtCidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 220, 130, -1));

        lblComplemento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblComplemento.setText("Complemento:");
        pnlDadosPessoaisClientes.add(lblComplemento, new org.netbeans.lib.awtextra.AbsoluteConstraints(235, 222, -1, -1));

        txtComplemento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtComplemento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtComplementoActionPerformed(evt);
            }
        });
        pnlDadosPessoaisClientes.add(txtComplemento, new org.netbeans.lib.awtextra.AbsoluteConstraints(332, 219, 134, -1));

        lblCpf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCpf.setText("CPF:");
        pnlDadosPessoaisClientes.add(lblCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(487, 222, -1, -1));

        txtCpf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlDadosPessoaisClientes.add(txtCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 219, 127, -1));

        tabbedPaneClientes.addTab("Dados pessoais", pnlDadosPessoaisClientes);

        lblNomeCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNomeCliente.setText("Nome do cliente:");

        txtNomeCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N

        btnPesquisar.setBackground(new java.awt.Color(255, 218, 185));
        btnPesquisar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPesquisar.setText("Pesquisar");
        btnPesquisar.setToolTipText("Clique neste botão para consultar os clientes pelo nome");
        btnPesquisar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarActionPerformed(evt);
            }
        });

        tblDadosClientes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null},
                {null, null, null, null, null, null, null, null, null, null, null}
            },
            new String [] {
                "ID", "Nome", "Email", "CPF", "Cep", "Endereço", "N°", "Bairro", "Cidade", "UF", "Celular"
            }
        ));
        scrollPaneDadosClientes.setViewportView(tblDadosClientes);

        javax.swing.GroupLayout pnlConsultaClientesLayout = new javax.swing.GroupLayout(pnlConsultaClientes);
        pnlConsultaClientes.setLayout(pnlConsultaClientesLayout);
        pnlConsultaClientesLayout.setHorizontalGroup(
            pnlConsultaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConsultaClientesLayout.createSequentialGroup()
                .addGap(22, 22, 22)
                .addGroup(pnlConsultaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(scrollPaneDadosClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 639, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addGroup(pnlConsultaClientesLayout.createSequentialGroup()
                        .addComponent(lblNomeCliente)
                        .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                        .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, 295, javax.swing.GroupLayout.PREFERRED_SIZE)
                        .addGap(18, 18, 18)
                        .addComponent(btnPesquisar, javax.swing.GroupLayout.PREFERRED_SIZE, 104, javax.swing.GroupLayout.PREFERRED_SIZE)))
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        pnlConsultaClientesLayout.setVerticalGroup(
            pnlConsultaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlConsultaClientesLayout.createSequentialGroup()
                .addGap(28, 28, 28)
                .addGroup(pnlConsultaClientesLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(lblNomeCliente)
                    .addComponent(txtNomeCliente, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                    .addComponent(btnPesquisar))
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addComponent(scrollPaneDadosClientes, javax.swing.GroupLayout.PREFERRED_SIZE, 176, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addContainerGap(18, Short.MAX_VALUE))
        );

        tabbedPaneClientes.addTab("Consulta de clientes", pnlConsultaClientes);

        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 1;
        gridBagConstraints.gridwidth = 5;
        gridBagConstraints.ipady = 12;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(6, 0, 0, 0);
        pnlGeral.add(tabbedPaneClientes, gridBagConstraints);

        btnCadastrar.setBackground(new java.awt.Color(179, 229, 252));
        btnCadastrar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCadastrar.setText("Cadastrar");
        btnCadastrar.setToolTipText("Clique neste botão para cadastrar um cliente");
        btnCadastrar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCadastrarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 0;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 21;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 51, 13, 0);
        pnlGeral.add(btnCadastrar, gridBagConstraints);

        btnAtualizar.setBackground(new java.awt.Color(179, 229, 252));
        btnAtualizar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAtualizar.setText("Atualizar");
        btnAtualizar.setToolTipText("Clique neste botão para atualizar o registro de um cliente");
        btnAtualizar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAtualizarActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 1;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 25;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 50, 13, 0);
        pnlGeral.add(btnAtualizar, gridBagConstraints);

        btnExcluir.setBackground(new java.awt.Color(179, 229, 252));
        btnExcluir.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnExcluir.setText("Excluir");
        btnExcluir.setToolTipText("Clique neste botão para excluir o registro de um cliente");
        btnExcluir.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnExcluirActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 2;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 38;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 60, 13, 0);
        pnlGeral.add(btnExcluir, gridBagConstraints);

        btnLimpar.setBackground(new java.awt.Color(179, 229, 252));
        btnLimpar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.setToolTipText("Clique neste botão para limpar os campos");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        gridBagConstraints = new java.awt.GridBagConstraints();
        gridBagConstraints.gridx = 3;
        gridBagConstraints.gridy = 2;
        gridBagConstraints.ipadx = 28;
        gridBagConstraints.anchor = java.awt.GridBagConstraints.NORTHWEST;
        gridBagConstraints.insets = new java.awt.Insets(12, 50, 13, 0);
        pnlGeral.add(btnLimpar, gridBagConstraints);

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlGeral, javax.swing.GroupLayout.PREFERRED_SIZE, 678, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlGeral, javax.swing.GroupLayout.DEFAULT_SIZE, 418, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtIdtxtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdtxtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdtxtIdActionPerformed

    private void txtComplementoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtComplementoActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtComplementoActionPerformed

    private void btnCadastrarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCadastrarActionPerformed
        // Verificação de campos obrigatórios
        try {
            if (txtNome.getText().trim().isEmpty() || txtCpf.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Nome e CPF são obrigatórios!");
                return;
            }
            
            Clientes cliente = new Clientes();
            
            cliente.setNome(txtNome.getText());
            cliente.setCpf(txtCpf.getText());
            cliente.setEmail(txtEmail.getText());
            cliente.setCelular(txtCelular.getText());
            cliente.setCep(txtCep.getText());
            cliente.setEndereco(txtEndereco.getText());
            cliente.setNumero(txtNumero.getText());
            cliente.setBairro(txtBairro.getText());
            cliente.setCidade(txtCidade.getText());
            cliente.setComplemento(txtComplemento.getText());
            cliente.setUnidade(cmbxUf.getSelectedItem().toString());

            // Cadastrando no banco de dados
            ClientesDao clientesDao = new ClientesDao();
            clientesDao.cadastroClientes(cliente);

            // Atualizando a lista de clientes
            listarTodosClientes();
            
            JOptionPane.showMessageDialog(null, "Cliente cadastrado com sucesso!");
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível cadastrar o cliente: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnCadastrarActionPerformed

    private void btnAtualizarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAtualizarActionPerformed
        // Verificação de campos obrigatórios
        try {
            if (txtNome.getText().trim().isEmpty() || txtCpf.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Nome e CPF são obrigatórios!");
                return;
            }
            
            Clientes cliente = new Clientes();
            
            cliente.setId(Integer.parseInt(txtId.getText()));
            cliente.setNome(txtNome.getText());
            cliente.setCpf(txtCpf.getText());
            cliente.setEmail(txtEmail.getText());
            cliente.setCelular(txtCelular.getText());
            cliente.setCep(txtCep.getText());
            cliente.setEndereco(txtEndereco.getText());
            cliente.setNumero(txtNumero.getText());
            cliente.setBairro(txtBairro.getText());
            cliente.setCidade(txtCidade.getText());
            cliente.setComplemento(txtComplemento.getText());
            cliente.setUnidade(cmbxUf.getSelectedItem().toString());

            // Atualizando o cliente no banco de dados
            ClientesDao clientesDao = new ClientesDao();
            clientesDao.atualizarClientes(cliente);

            // Atualizando a lista de clientes
            listarTodosClientes();
            
            JOptionPane.showMessageDialog(null, "Cliente atualizado com sucesso!");
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível atualizar o cliente: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnAtualizarActionPerformed

    private void btnPesquisarNomeActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarNomeActionPerformed
        // Verificando se foi digitado um nome
        try {
            String nome = txtNome.getText().trim();
            
            if (nome.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Digite o nome do cliente para pesquisar.");
                return;
            }

            // Buscando o nome do cliente
            ClientesDao dao = new ClientesDao();
            Clientes cliente = dao.buscarNomeCliente(nome);
            
            if (cliente != null) {
                txtId.setText(String.valueOf(cliente.getId()));
                txtNome.setText(cliente.getNome());
                txtCpf.setText(cliente.getCpf());
                txtEmail.setText(cliente.getEmail());
                txtCelular.setText(cliente.getCelular());
                txtCep.setText(cliente.getCep());
                txtEndereco.setText(cliente.getEndereco());
                txtNumero.setText(cliente.getNumero());
                txtBairro.setText(cliente.getBairro());
                txtCidade.setText(cliente.getCidade());
                txtComplemento.setText(cliente.getComplemento());
                cmbxUf.setSelectedItem(cliente.getUnidade());
                
                JOptionPane.showMessageDialog(null, "Cliente encontrado!");
            } else {
                JOptionPane.showMessageDialog(null, "Cliente não encontrado!");
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao buscar cliente: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnPesquisarNomeActionPerformed

    private void btnExcluirActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnExcluirActionPerformed
        // Verificando se foi pesquisado um nome antes de excluir
        try {
            if (txtId.getText().trim().isEmpty()) {
                JOptionPane.showMessageDialog(null, "Pesquise um cliente antes de excluir.");
                return;
            }
            
            int confirmacao = JOptionPane.showConfirmDialog(
                    null,
                    "Tem certeza que deseja excluir este cliente?",
                    "Confirmação",
                    JOptionPane.YES_NO_OPTION
            );
            
            if (confirmacao == JOptionPane.YES_OPTION) {
                Clientes cliente = new Clientes();
                cliente.setId(Integer.parseInt(txtId.getText())); // este id foi o id preeenchido na pesquisa

                // Excluindo cliente
                ClientesDao dao = new ClientesDao();
                dao.excluirClientes(cliente);
                
                listarTodosClientes();
                
                JOptionPane.showMessageDialog(null, "Cliente excluído com sucesso!");
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao excluir cliente: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnExcluirActionPerformed

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // Limpar todos os campos
        txtId.setText("");
        txtNome.setText("");
        txtCpf.setText("");
        txtEmail.setText("");
        txtCelular.setText("");
        txtCep.setText("");
        txtEndereco.setText("");
        txtNumero.setText("");
        txtBairro.setText("");
        txtCidade.setText("");
        txtComplemento.setText("");
        cmbxUf.setSelectedIndex(0);
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnPesquisarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarActionPerformed
        try {
            // Pega o nome digitado no jTextField
            String nome = txtNomeCliente.getText().trim();

            // Buscando o cliente pelo nome
            ClientesDao dao = new ClientesDao();
            ArrayList<Clientes> lista = dao.listarClientesPorNome(nome);

            // Atualiza a tabela com os resultados encontrados
            DefaultTableModel modelo = (DefaultTableModel) tblDadosClientes.getModel();
            modelo.setRowCount(0); // limpa a tabela

            for (Clientes c : lista) {
                modelo.addRow(new Object[]{
                    c.getId(),
                    c.getNome(),
                    c.getEmail(),
                    c.getCpf(),
                    c.getCep(),
                    c.getEndereco(),
                    c.getNumero(),
                    c.getBairro(),
                    c.getCidade(),
                    c.getUnidade(),
                    c.getCelular()
                });
            }
            
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao pesquisar cliente: " + e.getMessage());
            e.printStackTrace();
        }

    }//GEN-LAST:event_btnPesquisarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaClientes.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaClientes().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAtualizar;
    private javax.swing.JButton btnCadastrar;
    private javax.swing.JButton btnExcluir;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnPesquisar;
    private javax.swing.JButton btnPesquisarNome;
    private javax.swing.JComboBox<String> cmbxUf;
    private javax.swing.JLabel lblBairro;
    private javax.swing.JLabel lblCelular;
    private javax.swing.JLabel lblCep;
    private javax.swing.JLabel lblCidade;
    private javax.swing.JLabel lblComplemento;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblEmail;
    private javax.swing.JLabel lblEndereco;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNome;
    private javax.swing.JLabel lblNomeCliente;
    private javax.swing.JLabel lblNumero;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblUf;
    private javax.swing.JPanel pnlConsultaClientes;
    private javax.swing.JPanel pnlDadosPessoaisClientes;
    private javax.swing.JPanel pnlGeral;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JScrollPane scrollPaneDadosClientes;
    private javax.swing.JTabbedPane tabbedPaneClientes;
    private javax.swing.JTable tblDadosClientes;
    private javax.swing.JTextField txtBairro;
    private javax.swing.JTextField txtCelular;
    private javax.swing.JTextField txtCep;
    private javax.swing.JTextField txtCidade;
    private javax.swing.JTextField txtComplemento;
    private javax.swing.JTextField txtCpf;
    private javax.swing.JTextField txtEmail;
    private javax.swing.JTextField txtEndereco;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNome;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtNumero;
    // End of variables declaration//GEN-END:variables

    // Método para povoar a tabela
    public void listarTodosClientes() {
        try {
            ClientesDao dao = new ClientesDao();
            ArrayList<Clientes> lista = dao.listarClientes();
            
            DefaultTableModel modelo = (DefaultTableModel) tblDadosClientes.getModel();
            modelo.setRowCount(0);
            
            for (Clientes c : lista) {
                modelo.addRow(new Object[]{
                    c.getId(),
                    c.getNome(),
                    c.getEmail(),
                    c.getCpf(),
                    c.getCep(),
                    c.getEndereco(),
                    c.getNumero(),
                    c.getBairro(),
                    c.getCidade(),
                    c.getUnidade(),
                    c.getCelular()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao listar clientes: " + e.getMessage());
        }
    }
    
}
