package view;

import beans.Clientes;
import beans.Sorvetes;
import beans.Vendas;
import dao.ClientesDao;
import dao.SorvetesDao;
import dao.VendasDao;
import java.time.LocalDateTime;
import java.util.ArrayList;
import java.util.List;
import javax.swing.JOptionPane;
import javax.swing.table.DefaultTableModel;

public class TelaVendas extends javax.swing.JFrame {

    List<Sorvetes> listaSorvetes = new ArrayList<>();

    public TelaVendas() {
        initComponents();
        listarTodosSorvetes();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        pnlGeral = new javax.swing.JPanel();
        pnlTitle = new javax.swing.JPanel();
        lblTitle = new javax.swing.JLabel();
        separatorVertical = new javax.swing.JSeparator();
        separatorHorizontal = new javax.swing.JSeparator();
        pnlCliente = new javax.swing.JPanel();
        lblCpf = new javax.swing.JLabel();
        txtCpf = new javax.swing.JTextField();
        lblNomeCliente = new javax.swing.JLabel();
        txtNomeCliente = new javax.swing.JTextField();
        lblSelecaoSorvete = new javax.swing.JLabel();
        btnPesquisarCliente = new javax.swing.JButton();
        scrollPaneExibirSorvetes = new javax.swing.JScrollPane();
        tblExibirSorvetes = new javax.swing.JTable();
        pnlCarrinhoCompras = new javax.swing.JPanel();
        scrollPaneCarrinho = new javax.swing.JScrollPane();
        tblCarrinhoCompras = new javax.swing.JTable();
        pnlSorvete = new javax.swing.JPanel();
        lblId = new javax.swing.JLabel();
        txtId = new javax.swing.JTextField();
        lblSaborSorvete = new javax.swing.JLabel();
        txtSaborSorvete = new javax.swing.JTextField();
        lblPreco = new javax.swing.JLabel();
        txtPreco = new javax.swing.JTextField();
        lblQuantidade = new javax.swing.JLabel();
        txtQuantidade = new javax.swing.JTextField();
        btnLimpar = new javax.swing.JButton();
        btnAdicionarQtd = new javax.swing.JButton();
        lblEstoque = new javax.swing.JLabel();
        txtEstoque = new javax.swing.JTextField();
        pnlTotalVenda = new javax.swing.JPanel();
        lblTotalVenda = new javax.swing.JLabel();
        txtTotalVenda = new javax.swing.JTextField();
        btnPagamento = new javax.swing.JButton();
        btnCancelar = new javax.swing.JButton();
        lblFormaPagamento = new javax.swing.JLabel();
        txtFormaPagamento = new javax.swing.JTextField();

        setDefaultCloseOperation(javax.swing.WindowConstants.DISPOSE_ON_CLOSE);

        pnlGeral.setBackground(new java.awt.Color(248, 248, 255));
        pnlGeral.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        pnlTitle.setBackground(new java.awt.Color(215, 189, 226));

        lblTitle.setFont(new java.awt.Font("Serif", 1, 24)); // NOI18N
        lblTitle.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblTitle.setText("Cadastro de Vendas");

        javax.swing.GroupLayout pnlTitleLayout = new javax.swing.GroupLayout(pnlTitle);
        pnlTitle.setLayout(pnlTitleLayout);
        pnlTitleLayout.setHorizontalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addComponent(lblTitle, javax.swing.GroupLayout.DEFAULT_SIZE, 880, Short.MAX_VALUE)
        );
        pnlTitleLayout.setVerticalGroup(
            pnlTitleLayout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(pnlTitleLayout.createSequentialGroup()
                .addGap(15, 15, 15)
                .addComponent(lblTitle)
                .addContainerGap(13, Short.MAX_VALUE))
        );

        pnlGeral.add(pnlTitle, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 880, -1));

        separatorVertical.setOrientation(javax.swing.SwingConstants.VERTICAL);
        pnlGeral.add(separatorVertical, new org.netbeans.lib.awtextra.AbsoluteConstraints(520, 60, -1, 420));
        pnlGeral.add(separatorHorizontal, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 293, 880, 10));

        pnlCliente.setBackground(new java.awt.Color(248, 248, 255));
        pnlCliente.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Cliente", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        pnlCliente.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblCpf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblCpf.setText("CPF:");
        pnlCliente.add(lblCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 28, -1, -1));

        txtCpf.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtCpf.setEnabled(false);
        pnlCliente.add(txtCpf, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 27, 151, -1));

        lblNomeCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblNomeCliente.setText("Nome:");
        pnlCliente.add(lblNomeCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 63, -1, -1));

        txtNomeCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlCliente.add(txtNomeCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(73, 65, 151, -1));

        lblSelecaoSorvete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblSelecaoSorvete.setText("Selecione o sorvete aqui:");
        pnlCliente.add(lblSelecaoSorvete, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 105, -1, -1));

        btnPesquisarCliente.setBackground(new java.awt.Color(255, 218, 185));
        btnPesquisarCliente.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPesquisarCliente.setText("Pesquisar");
        btnPesquisarCliente.setToolTipText("Clique aqui para pesquisar um cliente");
        btnPesquisarCliente.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPesquisarClienteActionPerformed(evt);
            }
        });
        pnlCliente.add(btnPesquisarCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(240, 63, 104, -1));

        tblExibirSorvetes.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Sabor", "Categoria", "Preço", "Unidade"
            }
        ));
        tblExibirSorvetes.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                tblExibirSorvetesMouseClicked(evt);
            }
        });
        scrollPaneExibirSorvetes.setViewportView(tblExibirSorvetes);

        pnlCliente.add(scrollPaneExibirSorvetes, new org.netbeans.lib.awtextra.AbsoluteConstraints(26, 135, 470, 77));

        pnlGeral.add(pnlCliente, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 60, 513, 230));

        pnlCarrinhoCompras.setBackground(new java.awt.Color(248, 248, 255));
        pnlCarrinhoCompras.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Carrinho de compras", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        pnlCarrinhoCompras.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        tblCarrinhoCompras.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null},
                {null, null, null, null, null}
            },
            new String [] {
                "ID", "Sabor", "Quantidade", "Preço", "Subtotal"
            }
        ));
        scrollPaneCarrinho.setViewportView(tblCarrinhoCompras);

        pnlCarrinhoCompras.add(scrollPaneCarrinho, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, 310, 180));

        pnlGeral.add(pnlCarrinhoCompras, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 60, 350, 230));

        pnlSorvete.setBackground(new java.awt.Color(248, 248, 255));
        pnlSorvete.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Sorvete", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        pnlSorvete.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblId.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        lblId.setText("ID:");
        pnlSorvete.add(lblId, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 30, -1, -1));

        txtId.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtId.setEnabled(false);
        txtId.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtIdtxtIdActionPerformed(evt);
            }
        });
        pnlSorvete.add(txtId, new org.netbeans.lib.awtextra.AbsoluteConstraints(43, 30, 48, -1));

        lblSaborSorvete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblSaborSorvete.setText("Sabor do sorvete:");
        pnlSorvete.add(lblSaborSorvete, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 67, -1, -1));

        txtSaborSorvete.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtSaborSorvete.setEnabled(false);
        pnlSorvete.add(txtSaborSorvete, new org.netbeans.lib.awtextra.AbsoluteConstraints(135, 66, 120, -1));

        lblPreco.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblPreco.setText("Preço:");
        pnlSorvete.add(lblPreco, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 104, -1, -1));

        txtPreco.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtPreco.setEnabled(false);
        pnlSorvete.add(txtPreco, new org.netbeans.lib.awtextra.AbsoluteConstraints(63, 103, 70, -1));

        lblQuantidade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblQuantidade.setText("Quantidade:");
        pnlSorvete.add(lblQuantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(170, 140, -1, -1));

        txtQuantidade.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtQuantidade.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                txtQuantidadetxtIdActionPerformed(evt);
            }
        });
        pnlSorvete.add(txtQuantidade, new org.netbeans.lib.awtextra.AbsoluteConstraints(250, 140, 60, -1));

        btnLimpar.setBackground(new java.awt.Color(179, 229, 252));
        btnLimpar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnLimpar.setText("Limpar");
        btnLimpar.setToolTipText("Clique neste botão para limpar os campos");
        btnLimpar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnLimparActionPerformed(evt);
            }
        });
        pnlSorvete.add(btnLimpar, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 100, 104, -1));

        btnAdicionarQtd.setBackground(new java.awt.Color(255, 218, 185));
        btnAdicionarQtd.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnAdicionarQtd.setText("Adicionar");
        btnAdicionarQtd.setToolTipText("Clique aqui para adicionar a quantidade de sorvetes que serão vendidos");
        btnAdicionarQtd.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnAdicionarQtdActionPerformed(evt);
            }
        });
        pnlSorvete.add(btnAdicionarQtd, new org.netbeans.lib.awtextra.AbsoluteConstraints(320, 139, 104, -1));

        lblEstoque.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblEstoque.setText("Estoque:");
        pnlSorvete.add(lblEstoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 140, -1, -1));

        txtEstoque.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtEstoque.setEnabled(false);
        pnlSorvete.add(txtEstoque, new org.netbeans.lib.awtextra.AbsoluteConstraints(80, 140, 60, -1));

        pnlGeral.add(pnlSorvete, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 300, 513, 180));

        pnlTotalVenda.setBackground(new java.awt.Color(248, 248, 255));
        pnlTotalVenda.setBorder(javax.swing.BorderFactory.createTitledBorder(null, "Total da venda", javax.swing.border.TitledBorder.DEFAULT_JUSTIFICATION, javax.swing.border.TitledBorder.DEFAULT_POSITION, new java.awt.Font("Segoe UI", 0, 14))); // NOI18N
        pnlTotalVenda.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        lblTotalVenda.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblTotalVenda.setText("Total da venda:");
        pnlTotalVenda.add(lblTotalVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 70, -1, -1));

        txtTotalVenda.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        txtTotalVenda.setEnabled(false);
        pnlTotalVenda.add(txtTotalVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(150, 70, 120, -1));

        btnPagamento.setBackground(new java.awt.Color(255, 218, 185));
        btnPagamento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnPagamento.setText("Pagamento");
        btnPagamento.setToolTipText("Clique aqui para adicionar o pagamento da venda");
        btnPagamento.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnPagamentoActionPerformed(evt);
            }
        });
        pnlTotalVenda.add(btnPagamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 120, 120, -1));

        btnCancelar.setBackground(new java.awt.Color(179, 229, 252));
        btnCancelar.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnCancelar.setText("Cancelar");
        btnCancelar.setToolTipText("Clique aqui para cancelar a venda");
        btnCancelar.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnCancelarActionPerformed(evt);
            }
        });
        pnlTotalVenda.add(btnCancelar, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 120, 100, -1));

        lblFormaPagamento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        lblFormaPagamento.setText("Forma de pagamento:");
        pnlTotalVenda.add(lblFormaPagamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(40, 30, -1, -1));

        txtFormaPagamento.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        pnlTotalVenda.add(txtFormaPagamento, new org.netbeans.lib.awtextra.AbsoluteConstraints(190, 30, 110, -1));

        pnlGeral.add(pnlTotalVenda, new org.netbeans.lib.awtextra.AbsoluteConstraints(530, 300, 350, 180));

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(pnlGeral, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    private void txtQuantidadetxtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtQuantidadetxtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtQuantidadetxtIdActionPerformed

    private void txtIdtxtIdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_txtIdtxtIdActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_txtIdtxtIdActionPerformed

    private void btnPagamentoActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPagamentoActionPerformed
        finalizarPagamento();
    }//GEN-LAST:event_btnPagamentoActionPerformed

    private void btnPesquisarClienteActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnPesquisarClienteActionPerformed
        // Verificando se foi digitado um nome
        try {
            String nome = txtNomeCliente.getText().trim();

            if (nome.isEmpty()) {
                JOptionPane.showMessageDialog(null, "Digite o nome do cliente para pesquisar.");
                return;
            }

            // Buscando o nome do cliente
            ClientesDao dao = new ClientesDao();
            Clientes cliente = dao.buscarNomeCliente(nome);

            if (cliente != null) {
                txtNomeCliente.setText(cliente.getNome());
                txtCpf.setText(cliente.getCpf());

                JOptionPane.showMessageDialog(null, "Cliente encontrado!");
            } else {
                JOptionPane.showMessageDialog(null, "Cliente não encontrado!");
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao buscar cliente: " + e.getMessage());
            e.printStackTrace();
        }
    }//GEN-LAST:event_btnPesquisarClienteActionPerformed

    private void tblExibirSorvetesMouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_tblExibirSorvetesMouseClicked
        try {
            int linhaSelecionada = tblExibirSorvetes.getSelectedRow();

            if (linhaSelecionada != -1) {
                // Pegando os valores da linha selecionada
                int id = Integer.parseInt(tblExibirSorvetes.getValueAt(linhaSelecionada, 0).toString());
                String sabor = tblExibirSorvetes.getValueAt(linhaSelecionada, 1).toString();
                String preco = tblExibirSorvetes.getValueAt(linhaSelecionada, 3).toString();

                // Setando os valores nos jTextField
                txtId.setText(String.valueOf(id));
                txtSaborSorvete.setText(sabor);
                txtPreco.setText(preco);

                // Buscando o estoque com método localizado na classe VendasDao
                VendasDao dao = new VendasDao();
                int estoque = dao.buscarEstoquePorId(id);
                txtEstoque.setText(String.valueOf(estoque));
            }

        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Selecione uma linha da tabela: " + e.getMessage());
            e.getStackTrace();
        }
    }//GEN-LAST:event_tblExibirSorvetesMouseClicked

    private void btnLimparActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnLimparActionPerformed
        // Limpando campos
        limparCampos();
    }//GEN-LAST:event_btnLimparActionPerformed

    private void btnAdicionarQtdActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnAdicionarQtdActionPerformed
        adicionarAoCarrinho();
        calcularTotal();
    }//GEN-LAST:event_btnAdicionarQtdActionPerformed

    private void btnCancelarActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnCancelarActionPerformed
        try {
            int confirmacao = JOptionPane.showConfirmDialog(this, "Deseja cancelar a venda?", "Cancelar", JOptionPane.YES_NO_OPTION);

            if (confirmacao == JOptionPane.YES_OPTION) {
                limparCampos(); // método para limpar tudo
                JOptionPane.showMessageDialog(this, "Venda cancelada.");
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Não foi possível cancelar a venda: " + e.getMessage());
        }

    }//GEN-LAST:event_btnCancelarActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Metal".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(TelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(TelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(TelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(TelaVendas.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new TelaVendas().setVisible(true);
            }
        });
    }

    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnAdicionarQtd;
    private javax.swing.JButton btnCancelar;
    private javax.swing.JButton btnLimpar;
    private javax.swing.JButton btnPagamento;
    private javax.swing.JButton btnPesquisarCliente;
    private javax.swing.JLabel lblCpf;
    private javax.swing.JLabel lblEstoque;
    private javax.swing.JLabel lblFormaPagamento;
    private javax.swing.JLabel lblId;
    private javax.swing.JLabel lblNomeCliente;
    private javax.swing.JLabel lblPreco;
    private javax.swing.JLabel lblQuantidade;
    private javax.swing.JLabel lblSaborSorvete;
    private javax.swing.JLabel lblSelecaoSorvete;
    private javax.swing.JLabel lblTitle;
    private javax.swing.JLabel lblTotalVenda;
    private javax.swing.JPanel pnlCarrinhoCompras;
    private javax.swing.JPanel pnlCliente;
    private javax.swing.JPanel pnlGeral;
    private javax.swing.JPanel pnlSorvete;
    private javax.swing.JPanel pnlTitle;
    private javax.swing.JPanel pnlTotalVenda;
    private javax.swing.JScrollPane scrollPaneCarrinho;
    private javax.swing.JScrollPane scrollPaneExibirSorvetes;
    private javax.swing.JSeparator separatorHorizontal;
    private javax.swing.JSeparator separatorVertical;
    private javax.swing.JTable tblCarrinhoCompras;
    private javax.swing.JTable tblExibirSorvetes;
    private javax.swing.JTextField txtCpf;
    private javax.swing.JTextField txtEstoque;
    private javax.swing.JTextField txtFormaPagamento;
    private javax.swing.JTextField txtId;
    private javax.swing.JTextField txtNomeCliente;
    private javax.swing.JTextField txtPreco;
    private javax.swing.JTextField txtQuantidade;
    private javax.swing.JTextField txtSaborSorvete;
    private javax.swing.JTextField txtTotalVenda;
    // End of variables declaration//GEN-END:variables

    // Método para listar todos os sorvetes
    public void listarTodosSorvetes() {
        try {
            SorvetesDao dao = new SorvetesDao();
            ArrayList<Sorvetes> lista = dao.listarSorvetes();

            DefaultTableModel modelo = (DefaultTableModel) tblExibirSorvetes.getModel();
            modelo.setRowCount(0);

            for (Sorvetes s : lista) {
                modelo.addRow(new Object[]{
                    s.getId(),
                    s.getSaborSorvete(),
                    s.getCategoria(),
                    s.getPreco(),
                    s.getUnidade()
                });
            }
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao listar sorvetes: " + e.getMessage());
        }
    }

    // Método para adicionar sorvete ao carrinho e controlar a quantidade de sorvetes no estoque
    private void adicionarAoCarrinho() {
        try {
            int id = Integer.parseInt(txtId.getText());
            String sabor = txtSaborSorvete.getText();
            int quantidade = Integer.parseInt(txtQuantidade.getText());
            double preco = Double.parseDouble(txtPreco.getText());
            int estoque = Integer.parseInt(txtEstoque.getText());

            if (quantidade > estoque) {
                JOptionPane.showMessageDialog(null, "Quantidade solicitada maior do que o estoque disponível!");
                return;
            }
            double subtotal = quantidade * preco;

            // Adiciona os dados na tabela do carrinho
            DefaultTableModel carrinho = (DefaultTableModel) tblCarrinhoCompras.getModel();
            carrinho.setRowCount(0);
            carrinho.addRow(new Object[]{
                id, sabor, quantidade, preco, subtotal
            });
            
            calcularTotal();

        } catch (NumberFormatException e) {
            JOptionPane.showMessageDialog(this, "Verifique os campos! Certifique-se de selecionar um sorvete e informar a quantidade.");
        }
    }

    private void calcularTotal() {
        try{
            double total = 0.0;
        DefaultTableModel carrinho = (DefaultTableModel) tblCarrinhoCompras.getModel();

        for (int i = 0; i < carrinho.getRowCount(); i++) {
            double subtotal = (double) carrinho.getValueAt(i, 4); // coluna do subtotal
            total += subtotal;
        }

        txtTotalVenda.setText(String.format("%.2f", total));
        } catch (Exception e) {
            JOptionPane.showMessageDialog(null, "Erro ao calcular total: " + e.getMessage());
        }
    }

    private void finalizarPagamento() {
        
        String formaPagamento = txtFormaPagamento.getText().trim();

        if (formaPagamento.isEmpty()) {
            JOptionPane.showMessageDialog(this, "Informe a forma de pagamento antes de finalizar.");
            return;
        }

        int confirmacao = JOptionPane.showConfirmDialog(
                this,
                "Deseja realmente finalizar a compra?",
                "Confirmação de Pagamento",
                JOptionPane.YES_NO_OPTION
        );

        if (confirmacao == JOptionPane.YES_OPTION) {
            try {
                Vendas venda = new Vendas();

                venda.setIdSorvete(Integer.parseInt(txtId.getText()));
                venda.setValorTotal(Double.parseDouble(txtTotalVenda.getText().replace(",", ".")));
                venda.setCpfCliente(txtCpf.getText());
                venda.setFormaPagamento(formaPagamento);
                venda.setQuantidadeSorvete(Integer.parseInt(txtQuantidade.getText()));
                venda.setDataHoraVenda(LocalDateTime.now());

                // Salvando venda
                VendasDao dao = new VendasDao();
                dao.salvarVenda(venda);

                // Atualizando a quantidade do estoque
                int estoqueAtual = Integer.parseInt(txtEstoque.getText());
                int quantidadeVendida = Integer.parseInt(txtQuantidade.getText());
                int novoEstoque = estoqueAtual - quantidadeVendida;

                dao.atualizarEstoque(venda.getIdSorvete(), novoEstoque);

                JOptionPane.showMessageDialog(this, "Venda finalizada com sucesso!");

            } catch (NumberFormatException e) {
                JOptionPane.showMessageDialog(this, "Erro nos dados numéricos: " + e.getMessage());
            }
        }
    }

    private void limparCampos() {
        txtId.setText("");
        txtSaborSorvete.setText("");
        txtPreco.setText("");
        txtEstoque.setText("");
        txtQuantidade.setText("");
        txtCpf.setText("");
        txtFormaPagamento.setText("");
        txtTotalVenda.setText("");
        DefaultTableModel modeloCarrinho = (DefaultTableModel) tblCarrinhoCompras.getModel();
        modeloCarrinho.setRowCount(0);
        DefaultTableModel modeloSorvetes = (DefaultTableModel) tblExibirSorvetes.getModel();
        modeloSorvetes.setRowCount(0);
    }

}
